version: '3.9' # 실행시 참고할 도커 컴포즈 문서의 버전

# services: 실행할 서비스들을 정의
services:
  app:
    build: . # Dockerfile이 있는 경로 (절대경로 또는 상대경로) # 현재 디렉토리의 도커파일 빌드
    # container_name: app # 컨테이너 이름(유저 작명)
    container_name: nestjs-app
    ports:
      - '8000:8000'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev

    environment: # 컨테이너 내에서 사용할 환경 변수를 정의(processs.env)
      - DATABASE_URL=postgresql://postgres:3527@db:5432/booklend
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CHOKIDAR_USEPOLLING=true # hotreload
    depends_on:
      - db
      - redis
      - kafka

  # db: 데이터베이스(사용자 작명)
  db:
    image: postgres:alpine
    # 빌드 실행 시 자동 재시작
    restart: always
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 3527
      POSTGRES_DB: booklend
      TZ: Asia/Seoul # 대한민국 시간대 설정
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # 프로덕션 환경에서는 보통 이름이 지정된 볼륨(Named Volume)을 사용하여 Docker가 데이터를 안정적으로 관리하게 하는 것이 일반적
      # 개발 환경에서는 바인드 마운트(Bind Mount)를 사용하여 코드와 데이터를 쉽게 접근하고 수정할 수 있도록 설정하는 것이 유리

  redis:
    image: redis:alpine
    container_name: redis-cache
    ports:
      - '6379:6379'
    command: redis-server
    volumes:
      - redis_data:/data

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - '9092:9092'
    volumes:
      - "kafka_data:/data"
    environment:
      # kraft
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      # - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      # - ALLOW_PLAINTEXT_LISTENER=yes
      # KAFKA_KRAFT_CLUSTER_ID not set - If using multiple nodes then you must use the same Cluster ID for each one
      # Kafka has been configured with a PLAINTEXT listener, this setting is not recommended for production environments.


  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - '8080:8080'
    depends_on:
      - kafka
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: wizard_test
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

volumes:
  postgres_data:
  redis_data:
  kafka_data:

# 도커 에러 - https://stackoverflow.com/questions/65272764/ports-are-not-available-listen-tcp-0-0-0-0-50070-bind-an-attempt-was-made-to