# version: '3.9' 이제 compose에서 버전을 지정하지 않음

# services: 실행할 서비스들을 정의
services:
  app:
    container_name: app
    build: . # Dockerfile이 있는 경로 (절대경로 또는 상대경로) # 현재 디렉토리의 도커파일 빌드
    env_file: # .env 파일을 지정하여 환경 변수를 로드
      # - .env.development
      - .env
    restart: always
    ports:
      - '${PORT}:${PORT}' # 외부 포트 : 내부 포트
    volumes: # 외부 경로 : 컨테이너 내부 경로
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev

    depends_on:
      - db
      - redis
      - kafka

  db:
    container_name: db
    image: postgres:alpine
    # 빌드 실행 시 자동 재시작
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: Asia/Seoul # 대한민국 시간대 설정
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./src/resources/db/csv/:/var/lib/postgresql/
      - ./src/resources/db/init/:/docker-entrypoint-initdb.d/

      # 프로덕션 환경에서는 보통 이름이 지정된 볼륨(Named Volume)을 사용하여 Docker가 데이터를 안정적으로 관리하게 하는 것이 일반적
      # 개발 환경에서는 바인드 마운트(Bind Mount)를 사용하여 코드와 데이터를 쉽게 접근하고 수정할 수 있도록 설정하는 것이 유리

  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    command: redis-server
    volumes:
      - redis_data:/data

  kafka:
    container_name: kafka
    image: bitnami/kafka:3.9.0
    restart: always
    ports:
      - '${KAFKA_PORT}:${KAFKA_PORT}'
    volumes:
      - 'kafka_data:/data'
    environment:
      # kraft
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092

      - KAFKA_HEAP_OPTS=-Xmx200m -Xms200m
      # - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      # - ALLOW_PLAINTEXT_LISTENER=yes
      # KAFKA_KRAFT_CLUSTER_ID not set - If using multiple nodes then you must use the same Cluster ID for each one
      # Kafka has been configured with a PLAINTEXT listener, this setting is not recommended for production environments.

  nginx:
    container_name: nginx
    image: nginx:1.27.2-alpine
    restart: always
    environment:
      - TZ=Asia/Seoul
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app

# 메모리 이슈
# kafka-ui:
#   container_name: kafka-ui
#   image: provectuslabs/kafka-ui:v0.7.2
#   ports:
#     - '8080:8080'
#   depends_on:
#     - kafka
#   environment:
#     DYNAMIC_CONFIG_ENABLED: 'true'
#     KAFKA_CLUSTERS_0_NAME: wizard_test
#     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ${KAFKA_BROKERS}

volumes:
  db_data:
  redis_data:
  kafka_data:
# docker-compose --env-file .env.production up --build -d
